# Boilerplate Makefile for many c-xref tests
#
# - Names the test from directory name
# - Generates a specific, simple, c-xrefrc from a template
# - Can verify output to expected with colours
#
# In the test Makefiles you just need to include this and define the
# $(TEST) target where the execution of the test should go.
#

include ../Makefile.messages

# You can override which c-xref to run by setting CXREF_PROGRAM, but
# each test need to define ARGUMENTS and can use $(COMMAND)
CXREF_PROGRAM = ../../src/c-xref
BASE_ARGUMENTS = -xrefrc .c-xrefrc -p $(CURDIR) $(EXTRA)
CXREF = $(CXREF_PROGRAM) $(BASE_ARGUMENTS)
COMMAND = $(CXREF) $(BASE_ARGUMENTS) $(ARGUMENTS)

# Define the test name as the directory name
TEST = $(shell basename '$(CURDIR)')


all: .c-xrefrc $(TEST)
$(TEST): .c-xrefrc

# Make all testcases silent by default. Use VERBOSE=1 to revert
$(VERBOSE).SILENT:

# All tests that uses a server driver should use this
EDIT_SERVER_DRIVER = ../../utils/server_driver.py

# Convert any (absolute) reference to current directory to CURDIR
NORMALIZE = sed -e "s+$(CURDIR)+CURDIR+g" -e "s/ len=[0-9]*/ len=<n>/g" -e "s+/.*/usr/+/usr/+g"

# Do we need date normalization too?
# -E 's/[[:digit:]]{4}-[[:digit:]]{2}-[[:digit:]]{2} [[:digit:]]{2}:[[:digit:]]{2}:[[:digit:]]{2}/0000-00-00 00:00:00/' >> output.tmp

# Verification is often done by comparing an output with the expected
VERIFY = cmp output expected ; \
	if [ $$? -ne 0 ] ; then \
		$(FAIL) ; \
		diff output expected ; \
		exit 1 ; \
	else \
		$(OK) ; \
		exit 0 ; \
	fi

# If the test requires a .c-xrefrc for test directory you need to
# generate one. The .c-xrefrc requires absolute paths, and to work in
# any directory, a .c-xrefrc can be generated from a common
# c-xrefrc.tpl by replacing some symbols as per rules below.
#
# We use the name '.c-xrefrc' so that a test can set HOME to CWD and
# editors will automatically read the correct file as if it was in the
# users HOME.
#
# TODO: we should check for a c-xrefrc.tpl in the test directory and
# use that instead, currently they have to do this in the Makefile if
# the standard does not work
.c-xrefrc: ../c-xrefrc.tpl
	@sed -e "s+CURDIR+$(CURDIR)+g" -e "s+TEST+$(TEST)+g" ../c-xrefrc.tpl > .c-xrefrc

clean:
	@-rm -rf CXrefs .c-xrefrc out* log *.log .cov/*

coverage:
	cd ../../src ; make clean-coverage
	@echo "Doing coverage in this directory only"
	$(MAKE) $(TEST)
	cd ../../src ; make COVERAGE_CASE=$(TEST) the-actual-coverage-report

# Targets for debugging with gdb or lldb, so far only works for tests
# that do not use the server driver
gdb:
	gdb $(CXREF_PROGRAM) -ex 'br main' -ex 'run $(BASE_ARGUMENTS) $(ARGUMENTS)'

cgdb:
	cgdb $(CXREF_PROGRAM) -ex 'br main' -ex 'run $(BASE_ARGUMENTS) $(ARGUMENTS)'

lldb:
	lldb -o 'breakpoint set --name main' -o 'process launch -- $(BASE_ARGUMENTS) $(ARGUMENTS)' $(CXREF_PROGRAM)
