#!/usr/bin/bash
set -e
adr_bin_dir=/usr/libexec/adr-tools
adr_template_dir=/usr/share/adr-tools

## usage: adr-renum [-d DIRECTORY] oldid newid
##
## Renumbers adr files in ADRDIR so that <oldid> get the <newid>
## number and any other ADRs are renumbered to allow for this.
##
## E.g.
##
##     adr-renum 1 3
##
## will renumber the current 2 to 1, 3 to 2 and the current 1 can then
## become number 3.

# Default ADR directory
dstdir=$("$adr_bin_dir/_adr_dir")

while getopts s:l: arg
do
    case "$arg" in
	d)
	    dstdir=("$OPTARG")
	    ;;
	--)
	    break
	    ;;
	*)
	    echo "Not implemented: $arg" >&2
	    exit 1
	    ;;
    esac
done
shift $((OPTIND-1))

old=$1
new=$2

oldid="$(printf "%04d" "$old")"
newid="$(printf "%04d" "$new")"

if [ `ls $dstdir/$oldid*.md 2>/dev/null | wc -l ` -gt 1 ];
then
    echo "ERROR: multiple ADRs with number $oldid found"
    exit 1
fi

original_name=`ls $dstdir/$oldid*.md`

echo Renumbering $oldid to $newid
if [ $old -lt $new ];
then
    for (( i=$new; i > $old; --i ))
    do
	pid="$(printf "%04d" "$i")"
	pname=`ls $dstdir/$pid*.md`
	nid="$(printf "%04d" "$(($i+1))")"
	nname=${pname/$pid/$nid}
	mv $pname $nname
    done
else
    for (( i=$old-1; i >= $new; --i ))
    do
	pid="$(printf "%04d" "$i")"
	pname=`ls $dstdir/$pid*.md`
	nid="$(printf "%04d" "$(($i+1))")"
	nname=${pname/$pid/$nid}
	mv $pname $nname
    done
fi
pid="$(printf "%04d" "$old")"
nid="$(printf "%04d" "$new")"
mv $original_name ${original_name/$pid/$nid}
echo "Note: links have not been renumbered..."
