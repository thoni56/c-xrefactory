/* -*- c -*-*/
#include "filetable.h"
#include <cgreen/mocks.h>

FileTable fileTable;

int noFileIndex = -1;

void fileTableInit(FileTable *table,
                   int size
) {
    mock(table, size);
}

void fileTableNoAllocInit(FileTable *table,
                          int size
) {
    mock(table, size);
}

FileItem *getFileItem(int fileIndex) {
    return (FileItem *)mock(fileIndex);
}

int getNextExistingFileIndex(int index) {
    return (int)mock(index);
}

bool fileTableIsMember(FileTable *table,
                       FileItem *element,
                       int *position
) {
    return (bool)mock(table, element, position);
}

void fileTableSet(FileTable *table,
                  FileItem *element,
                  int position
) {
    mock(table, element, position);
}

int fileTableAdd(FileTable *table,
                 FileItem *element
) {
    return mock(table, element);
}

bool existsInFileTable(char *fileName) {
    return mock(fileName);
}

void initFileTable(void) {
    mock();
}

void initNoFile(void) {
    mock();
}

int addFileNameToFileTable(char *name) {
  return (int) mock(name);
}

void mapOverFileTable(void (*fun)(FileItem *)) {
    mock(fun);
}

void mapOverFileTableWithIndex(void (*fun)(FileItem *, int)) {
    mock(fun);
}

void mapOverFileTableWithPointer(void (*fun)(FileItem *, void *), void *pointer) {
    mock(fun, pointer);
}

int lookupFileTable(char *fileName) {
    return (int)mock(fileName);
}
