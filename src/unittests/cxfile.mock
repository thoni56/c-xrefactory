/* -*- c -*-*/
#include "cxfile.h"
#include <cgreen/mocks.h>

void normalScanFor(char *fileName, char *suffix) {
    mock(fileName, suffix);
}

void scanForClassHierarchy(void) { mock(); }

void fullScanFor(char *symbolName) { mock(symbolName); }

void scanForBypass(char *symbolName) {
    mock(symbolName);
}

void scanReferencesToCreateMenu(char *symbolName) { mock(symbolName); }

void scanForMacroUsage(char *symbolName) { mock(symbolName); }


ScanFileFunctionStep symbolSearchFunctionSequence[1];
ScanFileFunctionStep deadCodeDetectionFunctionSequence[1];

int searchStringFitness(char *cxtag, int slen) {
  return (int) mock(cxtag, slen);
}

char *createTagSearchLineStatic(char *name, Position *p, int *len1, int *len2, int *len3) {
  return (char *) mock(name, p, len1, len2, len3);
}

bool symbolNameShouldBeHiddenFromReports(char *name) {
  return (bool) mock(name);
}

void searchSymbolCheckReference(SymbolReferenceItem *ss, Reference *rr) {
  mock(ss, rr);
}

int cxFileHashNumber(char *sym) {
  return (int) mock(sym);
}

void genReferenceFile(bool updating, char *filename) {
  mock(updating, filename);
}

void addSubClassItemToFileTab(int sup, int inf, int origin) {
  mock(sup, inf, origin);
}

void addSubClassesItemsToFileTab(Symbol *ss, int origin) {
  mock(ss, origin);
}

void scanCxFile(ScanFileFunctionStep *scanFuns) {
  mock(scanFuns);
}

bool scanReferenceFile(char *fname, char *fns1, char *fns2, ScanFileFunctionStep *scanFunTab) {
  return (int) mock(fname, fns1, fns2, scanFunTab);
}

void readOneAppropReferenceFile(char *symname, ScanFileFunctionStep *scanFunTab) {
  mock(symname, scanFunTab);
}

void scanReferenceFiles(char *fname, ScanFileFunctionStep *scanFunTab) {
  mock(fname, scanFunTab);
}

bool smartReadFileTabFile(void) {
  return (bool) mock();
}
