/* -*- c -*-*/
#include "symboltable.h"
#include <cgreen/mocks.h>

SymbolTable *symbolTable;

void symbolTableInit(SymbolTable *table, int size) {
  mock(table, size);
}

void symbolTableNoAllocInit(SymbolTable *table, int size) {
  mock(table, size);
}

bool symbolTableIsMember(SymbolTable *table, Symbol *element, int *position, Symbol **foundMemberPointer) {
  return (int) mock(table, element, position, foundMemberPointer);
}

bool symbolTableNextMember(Symbol *element, Symbol **original) {
  return (bool) mock(element, original);
}

void symbolTablePush(SymbolTable *table, Symbol *element, int position) {
  mock(table, element, position);
}

void symbolTableSetLast(SymbolTable *table, Symbol *element, int position) {
  mock(table, element, position);
}

int symbolTableAdd(SymbolTable *table, Symbol *element) {
  return mock(table, element);
}

bool symbolTableDelete(SymbolTable *table, Symbol *element) {
  return (bool) mock(table, element);
}

bool symbolTableDeleteExact(SymbolTable *table, Symbol *element) {
  return (bool) mock(table, element);
}

int symbolTableDeleteLast(SymbolTable *table, Symbol *element) {
  return (int) mock(table, element);
}

void symbolTableMap(SymbolTable *table, void (*fun)(Symbol *)) {
  mock(table, fun);
}

void symbolTableMap2(SymbolTable *table, void (*fun)(Symbol *, void *), void *a) {
  mock(table, fun, a);
}

void symbolTableMap3(SymbolTable *table, void (*fun)(int)) {
  mock(table, fun);
}

void symbolTableMap5(SymbolTable *table, void (*fun)(Symbol *, void *), void *arg) {
  mock(table, fun, arg);
}

void symbolTableStatistics(SymbolTable *table, int *usedIndexes, int *elements, int *maxdepth) {
  mock(table, usedIndexes, elements, maxdepth);
}

void initSymbolTable(int size) { mock(size); }

int addToSymbolTable(Symbol *symbol) { return (int)mock(symbol); }

void addSymbolNoTrail(SymbolTable *symbolTable, Symbol *symbol) { /* TODO remove table argument? */
    mock(symbol, symbolTable);
}
