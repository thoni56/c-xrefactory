/* ***********************************************************************

   .h template for hashed table of lists

   A hashlist allows multiple items with the same hash. They are
   linked and will have to be linearly searched.

   For an explanation of how these hashed tables are generated, see
   hashtab.tc

*/

#include <stdbool.h>

#define GLUE(a,b) a ## b
#define CONCAT(a,b) GLUE(a,b)

/* FUN_PREFIX is the same as TAB_NAME */
#define HASH_FUN_PREFIX HASH_TAB_NAME

typedef struct HASH_TAB_NAME {
    int size;
    HASH_ELEM_TYPE **tab;				/* *tab[size];*/
} HASH_TAB_TYPE;


extern void CONCAT(HASH_FUN_PREFIX, Init) (		/* Init */
    HASH_TAB_TYPE *table,
    int size
);

extern void CONCAT(HASH_FUN_PREFIX, NoAllocInit) ( /* No Allocation Init */
    HASH_TAB_TYPE *table,
    int size
);

extern bool CONCAT(HASH_FUN_PREFIX, IsMember) (	/* IsMember */
    HASH_TAB_TYPE *table,
    HASH_ELEM_TYPE *element,
    int *position,
    HASH_ELEM_TYPE **origin
);

extern int CONCAT(HASH_FUN_PREFIX, MembEqual) (
    HASH_ELEM_TYPE *e1,
    HASH_ELEM_TYPE *e2
);

extern bool CONCAT(HASH_FUN_PREFIX, NextMember) (
    HASH_ELEM_TYPE *element,
    HASH_ELEM_TYPE **original
);

extern void CONCAT(HASH_FUN_PREFIX, Push) (		/* prepend elem at position */
    HASH_TAB_TYPE *table,
    HASH_ELEM_TYPE *element,
    int position
);

extern void CONCAT(HASH_FUN_PREFIX, SetLast) (	/* append elem at position */
    HASH_TAB_TYPE *table,
    HASH_ELEM_TYPE *element,
    int position
);

extern int CONCAT(HASH_FUN_PREFIX, Add) (	/* Add, returns position */
    HASH_TAB_TYPE *table,
    HASH_ELEM_TYPE *element
);

extern bool CONCAT(HASH_FUN_PREFIX, Delete) (	/* Delete first of elem from tab */
    HASH_TAB_TYPE *table,
    HASH_ELEM_TYPE *element
);

/* Delete first of elem from tab, check exact equality of pointers */
extern bool CONCAT(HASH_FUN_PREFIX, DeleteExact) (
    HASH_TAB_TYPE *table,
    HASH_ELEM_TYPE *element
);

extern void CONCAT(HASH_FUN_PREFIX, Map) (
    HASH_TAB_TYPE *table,
    void (*fun) (HASH_ELEM_TYPE *)
);

extern void CONCAT(HASH_FUN_PREFIX, MapWithPointer) (
    HASH_TAB_TYPE *table,
    void (*fun) (HASH_ELEM_TYPE *, void *),
    void *a
);

extern void CONCAT(HASH_FUN_PREFIX, MapWithIndex) (
    HASH_TAB_TYPE *table,
    void (*fun) (int)
);

#undef GLUE
#undef CONCAT
#undef HASH_FUN_PREFIX

/* Local Variables: */
/* mode: c */
/* End: */
