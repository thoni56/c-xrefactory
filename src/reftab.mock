/* -*- c -*-*/
#include <cgreen/mocks.h>
#include "reftab.h"

ReferenceTable referenceTable;

void initReferenceTable(int size) {
    mock(size);
}

void refTabNoAllocInit(ReferenceTable *table, int size) {
    mock(table, size);
}

bool isMemberInReferenceTable(ReferencesItem *element, int *position, ReferencesItem **foundMemberPointer
) {
    return (bool)mock(element, position, foundMemberPointer);
}

bool refTabNextMember(ReferencesItem *element, ReferencesItem **original) {
    return (bool)mock(element, original);
}

void refTabPush(ReferenceTable *table, ReferencesItem *element, int position) {
    mock(table, element, position);
}

int refTabAdd(ReferenceTable *table, ReferencesItem *element) {
    return mock(table, element);
}

void mapOverReferenceTable(void (*fun)(ReferencesItem *)) {
    mock(fun);
}

void mapOverReferenceTableWithPointer(void (*fun)(ReferencesItem *, void *), void *pointer) {
    mock(fun, pointer);
}

void mapOverReferenceTableWithIndex(void (*fun)(int)) {
    mock(fun);
}

void refTabMap4(ReferenceTable *table, void(*fun)(ReferencesItem *, int), int i) {
    mock(table, fun, i);
}

int getNextExistingReferencesItem(int index) {
    return (int)mock(index);
}

ReferencesItem *getReferencesItem(int index) {
    return (ReferencesItem *)mock(index);
}

void setReferencesItem(int index, ReferencesItem *item) {
    mock(index, item);
}
