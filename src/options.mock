/* -*- c -*-*/
#include "options.h"
#include <cgreen/mocks.h>

Options options;
Options refactoringOptions;
Options s_cachedOptions;
Options s_initOpt;

void xrefSetenv(char *name, char *val) {
  mock(name, val);
}

void copyOptions(Options *dest, Options *src) {
  mock(dest, src);
}

void createOptionString(char **dest, char *text) {
  mock(dest, text);
}

void addSourcePathsCut(void) {
  mock();
}

void addStringListOption(StringList **optlist, char *argvi) {
    mock(optlist, argvi);
}

void getXrefrcFileName(char *ttt) {
  mock(ttt);
}

void dirInputFile(char *file, char *a1, char *a2, Completions *a3, void *a4, int *a5) {
  mock(file, a1, a2, a3, a4, a5);
}

char *getJavaHome(void) {
  return (char *) mock();
}

void getJavaClassAndSourcePath(void) {
  mock();
}

bool packageOnCommandLine(char *packageName) {
  return (bool) mock(packageName);
}

char *expandSpecialFilePredefinedVariables_st(char *tt, char *inputFilename) {
  return (char *) mock(tt);
}

bool readOptionFromFile(FILE *ff, int *nargc, char ***nargv, int memFl, char *sectionFile, char *project, char *resSection) {
  return (bool) mock(ff, nargc, nargv, memFl, sectionFile, project, resSection);
}

void readOptionFile(char *name, int *nargc, char ***nargv, char *sectionFile, char *project) {
  mock(name, nargc, nargv, sectionFile, project);
}

void readOptionPipe(char *command, int *nargc, char ***nargv, char *sectionFile) {
  mock(command, nargc, nargv, sectionFile);
}

void javaSetSourcePath(int defaultCpAllowed) {
  mock(defaultCpAllowed);
}

bool checkReferenceFileCountOption(int newRefNum) {
  return (int) mock(newRefNum);
}
