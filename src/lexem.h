#ifndef LEXEM_H_INCLUDED
#define LEXEM_H_INCLUDED

/**** DO NOT EDIT - generated from c_parser.tab.h & character_lexems.txt by Makefile ****/

typedef enum LexemCode {
LT = '<',
GT = '>',
LPAR = '(',
RPAR = ')',
LBRACE = '{',
RBRACE = '}',
LBRACKET = '[',
RBRACKET = ']',
EQ = '=',
NL = '\n',
DQUOTE = '"',
SQUOTE = '\'',
MINUS = '-',
PLUS = '+',
ASTERISK = '*',
EXLAMATION = '!',
QUESTION = '?',
COMMA = ',',
PERIOD = '.',
COLON = ':',
SEMICOLON = ';',
HASH = '#',
SLASH = '/',
AMPERSAND = '&',
BAR = '|',
TILDE = '~',
PERCENT = '%',
TYPE_NAME = 257,
INC_OP = 258,
DEC_OP = 259,
LEFT_OP = 260,
RIGHT_OP = 261,
LE_OP = 262,
GE_OP = 263,
EQ_OP = 264,
NE_OP = 265,
AND_OP = 266,
OR_OP = 267,
MUL_ASSIGN = 268,
DIV_ASSIGN = 269,
MOD_ASSIGN = 270,
ADD_ASSIGN = 271,
SUB_ASSIGN = 272,
LEFT_ASSIGN = 273,
RIGHT_ASSIGN = 274,
AND_ASSIGN = 275,
XOR_ASSIGN = 276,
OR_ASSIGN = 277,
PTR_OP = 278,
ELLIPSIS = 279,
URIGHT_OP = 280,
URIGHT_ASSIGN = 281,
YACC_PERC = 282,
YACC_DPERC = 283,
STATIC = 284,
BREAK = 285,
CASE = 286,
CHAR = 287,
CONST = 288,
CONTINUE = 289,
DEFAULT = 290,
DO = 291,
DOUBLE = 292,
ELSE = 293,
FLOAT = 294,
FOR = 295,
GOTO = 296,
IF = 297,
INT = 298,
LONG = 299,
RETURN = 300,
SHORT = 301,
SWITCH = 302,
VOID = 303,
VOLATILE = 304,
WHILE = 305,
TYPEDEF = 306,
EXTERN = 307,
AUTO = 308,
REGISTER = 309,
SIGNED = 310,
UNSIGNED = 311,
STRUCT = 312,
UNION = 313,
ENUM = 314,
SIZEOF = 315,
RESTRICT = 316,
_ATOMIC = 317,
_BOOL = 318,
_THREADLOCAL = 319,
_NORETURN = 320,
INLINE = 321,
ASM_KEYWORD = 322,
ANONYMOUS_MODIFIER = 323,
ABSTRACT = 324,
BOOLEAN = 325,
BYTE = 326,
CATCH = 327,
CLASS = 328,
EXTENDS = 329,
FINAL = 330,
FINALLY = 331,
IMPLEMENTS = 332,
IMPORT = 333,
INSTANCEOF = 334,
INTERFACE = 335,
NATIVE = 336,
NEW = 337,
PACKAGE = 338,
PRIVATE = 339,
PROTECTED = 340,
PUBLIC = 341,
SUPER = 342,
SYNCHRONIZED = 343,
THIS = 344,
THROW = 345,
THROWS = 346,
TRANSIENT = 347,
TRY = 348,
TRUE_LITERAL = 349,
FALSE_LITERAL = 350,
NULL_LITERAL = 351,
STRICTFP = 352,
ASSERT = 353,
TOKEN = 354,
TYPE = 355,
LABEL = 356,
COMPL_FOR_SPECIAL1 = 357,
COMPL_FOR_SPECIAL2 = 358,
COMPL_THIS_PACKAGE_SPECIAL = 359,
COMPL_TYPE_NAME = 360,
COMPL_STRUCT_NAME = 361,
COMPL_STRUCT_REC_NAME = 362,
COMPL_UP_FUN_PROFILE = 363,
COMPL_ENUM_NAME = 364,
COMPL_LABEL_NAME = 365,
COMPL_OTHER_NAME = 366,
COMPL_CLASS_DEF_NAME = 367,
COMPL_FULL_INHERITED_HEADER = 368,
COMPL_TYPE_NAME0 = 369,
COMPL_TYPE_NAME1 = 370,
COMPL_PACKAGE_NAME0 = 371,
COMPL_EXPRESSION_NAME0 = 372,
COMPL_METHOD_NAME0 = 373,
COMPL_PACKAGE_NAME1 = 374,
COMPL_EXPRESSION_NAME1 = 375,
COMPL_METHOD_NAME1 = 376,
COMPL_CONSTRUCTOR_NAME0 = 377,
COMPL_CONSTRUCTOR_NAME1 = 378,
COMPL_CONSTRUCTOR_NAME2 = 379,
COMPL_CONSTRUCTOR_NAME3 = 380,
COMPL_STRUCT_REC_PRIM = 381,
COMPL_STRUCT_REC_SUPER = 382,
COMPL_QUALIF_SUPER = 383,
COMPL_SUPER_CONSTRUCTOR1 = 384,
COMPL_SUPER_CONSTRUCTOR2 = 385,
COMPL_THIS_CONSTRUCTOR = 386,
COMPL_IMPORT_SPECIAL = 387,
COMPL_VARIABLE_NAME_HINT = 388,
COMPL_CONSTRUCTOR_HINT = 389,
COMPL_METHOD_PARAM1 = 390,
COMPL_METHOD_PARAM2 = 391,
COMPL_METHOD_PARAM3 = 392,
COMPL_YACC_LEXEM_NAME = 393,
CPP_TOKENS_START = 394,
CPP_INCLUDE = 395,
CPP_INCLUDE_NEXT = 396,
CPP_DEFINE = 397,
CPP_IFDEF = 398,
CPP_IFNDEF = 399,
CPP_IF = 400,
CPP_ELSE = 401,
CPP_ENDIF = 402,
CPP_ELIF = 403,
CPP_UNDEF = 404,
CPP_PRAGMA = 405,
CPP_LINE = 406,
CPP_DEFINE0 = 407,
CPP_TOKENS_END = 408,
CPP_COLLATION = 409,
CPP_DEFINED_OP = 410,
EOI_TOKEN = 411,
CACHING1_TOKEN = 412,
OL_MARKER_TOKEN = 413,
OL_MARKER_TOKEN1 = 414,
OL_MARKER_TOKEN2 = 415,
TMP_TOKEN1 = 416,
TMP_TOKEN2 = 417,
MULTI_TOKENS_START = 418,
IDENTIFIER = 419,
CONSTANT = 420,
LONG_CONSTANT = 421,
FLOAT_CONSTANT = 422,
DOUBLE_CONSTANT = 423,
STRING_LITERAL = 424,
LINE_TOKEN = 425,
IDENT_TO_COMPLETE = 426,
CPP_MACRO_ARGUMENT = 427,
IDENT_NO_CPP_EXPAND = 428,
CHAR_LITERAL = 429,
LAST_TOKEN = 430,
} LexemCode;

extern char *lexemEnumNames[];

extern void initLexemEnumNames(void);

#endif
