#define TYPE_NAME 257
#define INC_OP 258
#define DEC_OP 259
#define LEFT_OP 260
#define RIGHT_OP 261
#define LE_OP 262
#define GE_OP 263
#define EQ_OP 264
#define NE_OP 265
#define AND_OP 266
#define OR_OP 267
#define MUL_ASSIGN 268
#define DIV_ASSIGN 269
#define MOD_ASSIGN 270
#define ADD_ASSIGN 271
#define SUB_ASSIGN 272
#define LEFT_ASSIGN 273
#define RIGHT_ASSIGN 274
#define AND_ASSIGN 275
#define XOR_ASSIGN 276
#define OR_ASSIGN 277
#define PTR_OP 278
#define ELLIPSIS 279
#define URIGHT_OP 280
#define URIGHT_ASSIGN 281
#define YACC_PERC 282
#define YACC_DPERC 283
#define STATIC 284
#define BREAK 285
#define CASE 286
#define CHAR 287
#define CONST 288
#define CONTINUE 289
#define DEFAULT 290
#define DO 291
#define DOUBLE 292
#define ELSE 293
#define FLOAT 294
#define FOR 295
#define GOTO 296
#define IF 297
#define INT 298
#define LONG 299
#define RETURN 300
#define SHORT 301
#define SWITCH 302
#define VOID 303
#define VOLATILE 304
#define WHILE 305
#define TYPEDEF 306
#define EXTERN 307
#define AUTO 308
#define REGISTER 309
#define SIGNED 310
#define UNSIGNED 311
#define STRUCT 312
#define UNION 313
#define ENUM 314
#define SIZEOF 315
#define RESTRICT 316
#define _ATOMIC 317
#define _BOOL 318
#define _THREADLOCAL 319
#define _NORETURN 320
#define INLINE 321
#define ASM_KEYWORD 322
#define ANONYMOUS_MODIFIER 323
#define ABSTRACT 324
#define BOOLEAN 325
#define BYTE 326
#define CATCH 327
#define CLASS 328
#define EXTENDS 329
#define FINAL 330
#define FINALLY 331
#define IMPLEMENTS 332
#define IMPORT 333
#define INSTANCEOF 334
#define INTERFACE 335
#define NATIVE 336
#define NEW 337
#define PACKAGE 338
#define PRIVATE 339
#define PROTECTED 340
#define PUBLIC 341
#define SUPER 342
#define SYNCHRONIZED 343
#define THIS 344
#define THROW 345
#define THROWS 346
#define TRANSIENT 347
#define TRY 348
#define TRUE_LITERAL 349
#define FALSE_LITERAL 350
#define NULL_LITERAL 351
#define STRICTFP 352
#define ASSERT 353
#define TOKEN 354
#define TYPE 355
#define LABEL 356
#define COMPL_FOR_SPECIAL1 357
#define COMPL_FOR_SPECIAL2 358
#define COMPL_THIS_PACKAGE_SPECIAL 359
#define COMPL_TYPE_NAME 360
#define COMPL_STRUCT_NAME 361
#define COMPL_STRUCT_REC_NAME 362
#define COMPL_UP_FUN_PROFILE 363
#define COMPL_ENUM_NAME 364
#define COMPL_LABEL_NAME 365
#define COMPL_OTHER_NAME 366
#define COMPL_CLASS_DEF_NAME 367
#define COMPL_FULL_INHERITED_HEADER 368
#define COMPL_TYPE_NAME0 369
#define COMPL_TYPE_NAME1 370
#define COMPL_PACKAGE_NAME0 371
#define COMPL_EXPRESSION_NAME0 372
#define COMPL_METHOD_NAME0 373
#define COMPL_PACKAGE_NAME1 374
#define COMPL_EXPRESSION_NAME1 375
#define COMPL_METHOD_NAME1 376
#define COMPL_CONSTRUCTOR_NAME0 377
#define COMPL_CONSTRUCTOR_NAME1 378
#define COMPL_CONSTRUCTOR_NAME2 379
#define COMPL_CONSTRUCTOR_NAME3 380
#define COMPL_STRUCT_REC_PRIM 381
#define COMPL_STRUCT_REC_SUPER 382
#define COMPL_QUALIF_SUPER 383
#define COMPL_SUPER_CONSTRUCTOR1 384
#define COMPL_SUPER_CONSTRUCTOR2 385
#define COMPL_THIS_CONSTRUCTOR 386
#define COMPL_IMPORT_SPECIAL 387
#define COMPL_VARIABLE_NAME_HINT 388
#define COMPL_CONSTRUCTOR_HINT 389
#define COMPL_METHOD_PARAM1 390
#define COMPL_METHOD_PARAM2 391
#define COMPL_METHOD_PARAM3 392
#define COMPL_YACC_LEXEM_NAME 393
#define CPP_TOKENS_START 394
#define CPP_INCLUDE 395
#define CPP_INCLUDE_NEXT 396
#define CPP_DEFINE 397
#define CPP_IFDEF 398
#define CPP_IFNDEF 399
#define CPP_IF 400
#define CPP_ELSE 401
#define CPP_ENDIF 402
#define CPP_ELIF 403
#define CPP_UNDEF 404
#define CPP_PRAGMA 405
#define CPP_LINE 406
#define CPP_DEFINE0 407
#define CPP_TOKENS_END 408
#define CPP_COLLATION 409
#define CPP_DEFINED_OP 410
#define EOI_TOKEN 411
#define CACHING1_TOKEN 412
#define OL_MARKER_TOKEN 413
#define OL_MARKER_TOKEN1 414
#define OL_MARKER_TOKEN2 415
#define TMP_TOKEN1 416
#define TMP_TOKEN2 417
#define MULTI_TOKENS_START 418
#define IDENTIFIER 419
#define CONSTANT 420
#define LONG_CONSTANT 421
#define FLOAT_CONSTANT 422
#define DOUBLE_CONSTANT 423
#define STRING_LITERAL 424
#define LINE_TOKEN 425
#define IDENT_TO_COMPLETE 426
#define CPP_MACRO_ARGUMENT 427
#define IDENT_NO_CPP_EXPAND 428
#define CHAR_LITERAL 429
#define LAST_TOKEN 430
typedef union {
#include "yystype.h"
} YYSTYPE;
extern YYSTYPE c_yylval;
