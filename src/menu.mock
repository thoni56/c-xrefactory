/* -*- c -*-*/
#include "menu.h"
#include <cgreen/mocks.h>

void fillSymbolsMenu(SymbolsMenu *menu, ReferenceItem s, bool selected, bool visible,
                     unsigned ooBits, char olUsage, short int vlevel, char defUsage, Position defpos) {
    menu->references = s;
    menu->selected = selected;
    menu->visible = visible;
    menu->ooBits = ooBits;
    menu->olUsage = olUsage;
    menu->vlevel = vlevel;
    menu->defUsage = defUsage;
    menu->defpos = defpos;

    /* Default values */
    menu->refn = 0;
    menu->defRefn = 0;
    menu->outOnLine = 0;
    menu->markers = NULL;
    menu->next = NULL;
}

SymbolsMenu *freeSymbolsMenu(SymbolsMenu *menu) {
    return (SymbolsMenu *) mock(menu);
}

void freeSymbolsMenuList(SymbolsMenu *menu) {
    mock(menu);
}

void olcxAddReferenceToSymbolsMenu(SymbolsMenu *menu, Reference *reference) {
    mock(menu, reference);
}

void olcxPrintSelectionMenu(SymbolsMenu *menu) {
    mock(menu);
}

SymbolsMenu *olCreateNewMenuItem(ReferenceItem *sym, int vApplClass, Position *defpos,
                                     int defusage, int selected, int visible, unsigned ooBits, int olusage,
                                     int vlevel) {
    return (SymbolsMenu *) mock(sym, vApplClass, defpos, defusage, selected, visible, ooBits, olusage, vlevel);
}

SymbolsMenu *olAddBrowsedSymbolToMenu(SymbolsMenu **menuP, ReferenceItem *reference,
                                      bool selected, bool visible, unsigned ooBits,
                                      int olusage, int vlevel,
                                      Position *defpos, int defusage) {
    return (SymbolsMenu *)mock(menuP, reference, selected, visible, ooBits, olusage, vlevel, defpos, defusage);
}

void splitMenuPerSymbolsAndMap(SymbolsMenu *menu, void (*fun)(SymbolsMenu *, void *), void *p1) {
  mock(menu, fun, p1);
}
