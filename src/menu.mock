/* -*- c -*-*/
#include "menu.h"
#include <cgreen/mocks.h>

SymbolsMenu makeSymbolsMenu(ReferenceItem references, bool selected, bool visible,
                            unsigned ooBits, char olUsage, short int vlevel, char defUsage, Position defpos) {
    SymbolsMenu menu;
    menu.references = references;
    menu.selected = selected;
    menu.visible = visible;
    menu.ooBits = ooBits;
    menu.olUsage = olUsage;
    menu.vlevel = vlevel;
    menu.defUsage = defUsage;
    menu.defpos = defpos;

    /* Default values */
    menu.refn = 0;
    menu.defRefn = 0;
    menu.outOnLine = 0;
    menu.markers = NULL;
    menu.next = NULL;
    return menu;
}

void freeSymbolsMenuList(SymbolsMenu *menu) {
    mock(menu);
}

bool isBestFitMatch(SymbolsMenu *menu) {
    return (bool)mock(menu);
}

void olcxAddReferenceToSymbolsMenu(SymbolsMenu *menu, Reference *reference) {
    mock(menu, reference);
}

void olcxPrintSelectionMenu(SymbolsMenu *menu) {
    mock(menu);
}

SymbolsMenu *createNewMenuItem(ReferenceItem *sym, int includedFileNumber, Position defpos,
                               Usage defusage, bool selected, bool visible, unsigned ooBits, Usage olusage,
                               int vlevel) {
    Position *defaultPosition = &defpos;
    return (SymbolsMenu *) mock(sym, includedFileNumber, defaultPosition, defusage, selected, visible, ooBits, olusage, vlevel);
}

SymbolsMenu *addBrowsedSymbolToMenu(SymbolsMenu **menuP, ReferenceItem *reference,
                                      bool selected, bool visible, unsigned ooBits, SymbolRelation relation,
                                      int olusage, int vlevel,
                                      Position defpos, int defusage) {
    Position *defaultPosition = &defpos;
    return (SymbolsMenu *)mock(menuP, reference, selected, visible, ooBits, olusage, vlevel, defaultPosition,
                               defusage);
}

void splitMenuPerSymbolsAndMap(SymbolsMenu *menu, void (*fun)(SymbolsMenu *, void *), void *p1) {
  mock(menu, fun, p1);
}
