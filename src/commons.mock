/* -*- c -*-*/
#include "commons.h"

#include <cgreen/mocks.h>
#include <stdlib.h>

void openOutputFile(char *outfile) {
  mock(outfile);
}

void closeOutputFile(void) {
    mock();
}

void initCwd(void) {
    mock();
}

void reInitCwd(char *dffname, char *dffsect) {
    mock(dffname, dffsect);
}

void infoMessage(char message[]) {
    mock(message);
}

void warningMessage(int code, char *message) {
    mock(code, message);
}

void errorMessage(int code, char *message) {
    mock(code, message);
}

void fatalError(int code, char *message, int exitCode, char *file, int line) {
    mock(code, message, exitCode, file, line);
}

void internalCheckFail(char *expr, char *file, int line) {
    char message[10000];
    sprintf(message, "COMMONS MOCK: *** INTERNAL CHECK FAILED: %s in line %s:%d\n", expr, file, line);
    /* NOTE: This uses internal cgreen functions to point to the calling location, may not be forward compatible... */
    (*get_test_reporter()->assert_true)(get_test_reporter(), file, line, (false), message, NULL);
    exit(EXIT_SUCCESS);
}

char *create_temporary_filename() {
    return (char *) mock();
}

char *normalizeFileName_static(char *name, char *relative_to) {
    return (char *) mock(name, relative_to);
}

void copyFileFromTo(char *src, char *dest) {
    mock(src, dest);
}

int extractPathInto(char *source, char *dest) {
    return (int)mock(dest, source);
}
