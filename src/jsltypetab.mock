/* -*- c -*-*/
#include <cgreen/mocks.h>

#include "jsltypetab.h"

void jslTypeTabInit(struct jslTypeTab *table, int size) {
  mock(table, size);
}

void jslTypeTabNoAllocInit(struct jslTypeTab *table, int size) {
  mock(table, size);
}

bool jslTypeTabIsMember(struct jslTypeTab *table, JslSymbolList *element, int *position, JslSymbolList **origin) {
  return (int) mock(table, element, position, origin);
}

int jslTypeTabNextMember(JslSymbolList *element, JslSymbolList **original) {
  return (int) mock(element, original);
}

void jslTypeTabSet(struct jslTypeTab *table, JslSymbolList *element, int position) {
  mock(table, element, position);
}

void jslTypeTabSetLast(struct jslTypeTab *table, JslSymbolList *element, int position) {
  mock(table, element, position);
}

int jslTypeTabAdd(struct jslTypeTab *table, JslSymbolList *element) {
  return mock(table, element);
}

bool jslTypeTabDelete(struct jslTypeTab *table, JslSymbolList *element) {
  return (bool) mock(table, element);
}

bool jslTypeTabDeleteExact(struct jslTypeTab *table, JslSymbolList *element) {
  return (bool) mock(table, element);
}

int jslTypeTabDeleteLast(struct jslTypeTab *table, JslSymbolList *element) {
  return (int) mock(table, element);
}

void jslTypeTabMap(struct jslTypeTab *table, void (*fun)(JslSymbolList *)) {
  mock(table, fun);
}

void jslTypeTabMap2(struct jslTypeTab *table, void (*fun)(JslSymbolList *, void *), void *a) {
  mock(table, fun, a);
}

void jslTypeTabMap3(struct jslTypeTab *table, void (*fun)(int)) {
  mock(table, fun);
}

void jslTypeTabMap5(struct jslTypeTab *table, void (*fun)(JslSymbolList *, void *), void *arg) {
  mock(table, fun, arg);
}

void jslTypeTabStatistics(struct jslTypeTab *table, int *usedIndexes, int *elements, int *maxdepth) {
  mock(table, usedIndexes, elements, maxdepth);
}
