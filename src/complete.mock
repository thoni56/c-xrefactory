/* -*- c -*-*/
#include "complete.h"
#include <cgreen/mocks.h>

void initCompletions(Completions *completions, int length, Position position) {
    mock(completions, length, (intptr_t)&position);
}

void processName(char *name, CompletionLine *t, int orderFlag, void *c) {
  mock(name, t, orderFlag, c);
}

void completeForSpecial1(Completions *c) {
  mock(c);
}

void completeForSpecial2(Completions *c) {
  mock(c);
}

void completeUpFunProfile(Completions *c) {
  mock(c);
}

void completeTypes(Completions *c) {
  mock(c);
}

void completeStructs(Completions *c) {
  mock(c);
}

void completeRecNames(Completions *c) {
  mock(c);
}

void completeEnums(Completions *c) {
  mock(c);
}

void completeLabels(Completions *c) {
  mock(c);
}

void completeMacros(Completions *c) {
  mock(c);
}

void completeOthers(Completions *c) {
  mock(c);
}

void javaCompleteTypeSingleName(Completions *c) {
  mock(c);
}

void javaHintImportFqt(Completions *c) {
  mock(c);
}

void javaHintVariableName(Completions *c) {
  mock(c);
}

void javaHintCompleteNonImportedTypes(Completions *c) {
  mock(c);
}

void javaHintCompleteMethodParameters(Completions *c) {
  mock(c);
}

void javaCompleteTypeCompName(Completions *c) {
  mock(c);
}

void javaCompleteThisPackageName(Completions *c) {
  mock(c);
}

void javaCompletePackageSingleName(Completions *c) {
  mock(c);
}

void javaCompleteExprSingleName(Completions *c) {
  mock(c);
}

void javaCompleteUpMethodSingleName(Completions *c) {
  mock(c);
}

void javaCompleteFullInheritedMethodHeader(Completions *c) {
  mock(c);
}

void javaCompletePackageCompName(Completions *c) {
  mock(c);
}

void javaCompleteExprCompName(Completions *c) {
  mock(c);
}

void javaCompleteMethodCompName(Completions *c) {
  mock(c);
}

void javaCompleteHintForConstructSingleName(Completions *c) {
  mock(c);
}

void javaCompleteConstructSingleName(Completions *c) {
  mock(c);
}

void javaCompleteConstructCompName(Completions *c) {
  mock(c);
}

void javaCompleteConstructNestNameName(Completions *c) {
  mock(c);
}

void javaCompleteConstructNestPrimName(Completions *c) {
  mock(c);
}

void javaCompleteStrRecordPrimary(Completions *c) {
  mock(c);
}

void javaCompleteStrRecordSuper(Completions *c) {
  mock(c);
}

void javaCompleteStrRecordQualifiedSuper(Completions *c) {
  mock(c);
}

void javaCompleteClassDefinitionNameSpecial(Completions *c) {
  mock(c);
}

void javaCompleteClassDefinitionName(Completions *c) {
  mock(c);
}

void javaCompleteThisConstructor(Completions *c) {
  mock(c);
}

void javaCompleteSuperConstructor(Completions *c) {
  mock(c);
}

void javaCompleteSuperNestedConstructor(Completions *c) {
  mock(c);
}

void completeYaccLexem(Completions *c) {
  mock(c);
}

void olCompletionListInit(Position *originalPos) {
  mock(originalPos);
}

void formatOutputLine(char *tt, int startingColumn) {
  mock(tt, startingColumn);
}

void printCompletionsList(int noFocus) {
  mock(noFocus);
}

void printCompletions(Completions *c) {
  mock(c);
}
