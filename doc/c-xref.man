.\" Copyright (c) 1997-2004 Marian Vittek, Bratislava.
.TH C-XREF 1 \" -*- nroff -*-
.SH NAME
c-xref \- A cross referencing tool for C and Java.
.SH SYNOPSIS
.hy 0
.na
.TP
.B c-xref
.RB "[\|" "options"\&\|]
.I infile
.RB "[\|" "\... infile"\&\|]
.ad b
.hy 1
.SH TYPICAL INVOCATION FORMS
.TP
.B c-xref
.I -p
<project>
.TP
.B c-xref
.I -update -p
<project>
.TP
.B c-xref
<srcdir>
.SH DESCRIPTION
C-xref is a C and Java cross-referencing tool.
It parses input files noting all symbol's
definitions and usages. Its output is a list of symbols, together
with positions of declarations, definition and all usages.
Output is written to the file specified by the
.I -refs
option. C-xref's cross references are destinated to be read by
.I c-xref
itself or by on-line editing functions. The programming language in which an
input file is written is inferred
from file suffix as follows: .java for a Java language file, .y
for a YACC (and C) input file, .jar for a Java archive file and finally
all other suffixes are interpreted as C input files.

.SH WILDCARDS

The following wildcard characters can be used when specifying input files: '*'
expands to any (possibly empty) string; '?' expands to any single
character and '[...]' pair expands to one of enclosed
characters. Ranges of characters can be included between [ and ], so
for example [a-z] matches any lower case letter, [0-9] matches any
digit, as it is usual in standard shell expressions. If the first
character following the [ is a ^ then the sense of expansion is
inversed, for example [^0-9] expands to any non-digit
character. Options -I, -classpath, -sourcepath and -javadocpath also
accept wild characters. Be carefull when using wild characters in those options
as they can considerably slow down the task.

.SH NOTE
C-xref accepts many options, however except the
.I -p
and
.I -update
options, it is not recommended to write them directly on the command line.
The standard way of passing options to c-xref is configuration file named
.I .c-xrefrc
placed in user's home directory. Options stored in the ${HOME}/.c-xrefrc
file are read at each c-xref invocation. Storing command line options into
this file is the only way how you can pass project depending
options to c-xref when invoked from Emacs.

Order of options on command line is important. Options are processed in order
in which they are written.

.SH OPTIONS
Here is the table of command options accepted by c-xref.
.TP
.B \-p project
At the beginning of the execution, read and process
options from the section
.I project
of the
.I .c-xrefrc
configuration file. This option is used to abstract from concrete
options and file names when using c-xref from command line and from several
IDEs.
For more info, see the .c-xrefrc file documentation.
.TP
.B \-r
This option is default now, so you do not need to enter it.
It causes that if a directory is entered as
.I infile
then all files from the directory having the suffix '.c' or '.java'
are processed (note that it is useless to process the '.h' suffixes as
they are processed when included by a '.c' file).
Subdirectories are recursively searched. This option is obsolete now.
.TP
.B \-\-r
Do not process directories recursively. This is inverse option to -r option.
.TP
.B \-prune paths
When recursively searching for input files do not enter into directories in paths. Paths
can be either a simple name, an absolute path, or a ':' (';' under MS-Windows)
separated list of both. For example -prune CVS:/project/backup will forbids scanning of
the directory /project/backup as well as all directories named CVS.
.TP
.B \-I dir
Add the directory
.I dir
to the end of list of
directories inspected when looking for an include file.
If specified more than one `\|\c
.B \-I\c
\&\|' option,
the directories are scanned in left-to-right order. If the directory is specified
using relative path, it is considered relative to the currently
parsed file directory.
.TP
.BI "\-D" "name"\c
\&
Predefine \c
.I name\c
\& as a macro, with definition `\|\c
.B 1\c
\&\|'.
.TP
.BI "\-D" "name" = definition
\&
Predefine \c
.I name\c
\& as a macro, with definition \c
.I definition\c
\&.
.TP
.B \-resetIncludeDirs
This option removes all directories from include directory list (including
the default include directories like /usr/include).
This option should be used before any -I option.
.TP
.B \-cacheincludes
This option makes c-xref keep read include files in memory
and reuse them when processing next files.
This can improve time performance when many source files are using
common header files. Especially if those header files are read
over network or from a slow drive. It will increase space requirements,
however.
.TP
.B \-jdkclasspath paths
This option defines path to standard runtime library (rt.jar) of your Java
installation. If you are using JDK from Sun Microsystems, then
c-xref task should be able to infer this path from PATH and JAVA_HOME environment
variables. Otherwise you will need to specify it explicitly using
-jdkclasspath option.
The syntax of paths is the same as for the -classpath option.
For example you can use the '-jdkclasspath /usr/local/jdk1.2.2/jre/lib/rt.jar'
settting for most Java 1.2 installations.
.TP
.B \-classpath paths
This option specifies the classpath used for finding Java .class files.
This option overrides the value of the environment variable CLASSPATH.
See also the '-jdkclasspath' and '-sourcepath' option.
.TP
.B \-sourcepath paths
This option specifies paths where sources of Java packages and classes
are searched. This option overrides the value of the environment
variable SOURCEPATH.
If not present the current classpath is used as default. The 'sourcepath'
value is used for finding source files in the
same way as 'classpath' is used for finding .class compiled files.
When loading a class having both source and class available then the
time of last modification of both files is examined and the class is
loaded from the newer file.
.TP
.B \-javadocpath=<path>
Specifies paths where Javadoc documentation is stored in
local file system. Several paths can be specified,
the syntax is the same as for classpath value. When looking for a
javadoc documentation, c-xref will first search files on paths
specified by -javadocpath, if not found and the package documentation
is available (-javadocavailable option) the URL specified
by -javadocurl is taken.
See also -javadocurl, -javadocavailable and -htmlgenjavadoclink options.
.TP
.B \-packages
This option allows to enter package names instead of input file
names on command line.
.TP
.B \-refs file
This option specifies the file where the cross-references
are stored. If the
.I -refnum=n
option is present then the
.I file
indicates the directory where cross-reference
files are stored.
.TP
.B "\-refnum=<number>"
This option specifies how many cross reference files will be generated.
When
.I <number>
== 1, the name specified by the '-refs' option is directly
the name of the cross reference file.
When
.I <number>
> 1 then the name specified by the '-refs' option is
interpreted as directory where cross reference files are stored.
You should specify the
.I <number>
proportionally to the size
of your project.
Do not forget to delete the old cross-reference file if
you change the -refnum from 1 to a bigger value.
.TP
.B "\-refalphahash"
Split references into 28 files depending on the first letter of the
symbol. This option is useful when generating HTML form, because
it makes easy to find cross references for given symbol name.
This option excludes using of the -refnum option.
.TP
.B "\-refalpha2hash"
Split references into 28*28 files depending on the first two letters of the
symbol. This option is useful when generating HTML form, because
it makes easy to find cross references for given symbol name.
This option excludes using of the -refnum option.
.TP
.B "\-exactpositionresolve"
This option controls how symbols which are local to a compilation
unit, but usually used in several files, are linked together.
This concerns C language symbols like macros, structures and their records, etc.
Such symbols have no link names passed to linker (like global functions have).
This creates a problem how 'c-xref' can link together (for example) structures
of the same name used in different compilation units.
If the -exactpositionresolve option is present then such symbols
are considered to be equals if their definitions come from the
same header file and they are defined at the same position in the
file (in other words if this is
a single definition in the source code). Otherwise two symbols
are linked together when they have the same name.
The '-exactpositionresolve' is very powerful feature
because it allows perfect resolution of browsed symbol and allows you
to safely rename one of two symbols if a name conflict occurs.
However this option also
causes that you will need to update cross reference file after
each modification of a header file (as the cross-reference file stores
information about position of the macro definition).
Updating may be too annoying in normal use when you often edit header files.
In general, this option is recommended when browsing
source code which is not under active development.

.TP
.B -noincluderefresh
This is a particular option importing only when c-xref task is used
from Emacs. It
causes that c-xref task does not update
include references when used by an Emacs macro. This avoids
memory overflow for huge
projects or for
projects including huge header files (for example when including
Microsoft windows API headers).

.TP
.B "\-update"
This option represents standard way of how to keep cross-reference file
up to date. It causes that
modification time of all input files as well as those listed
in the existing cross-reference file are checked and only those
having newer modification time than existing cross-reference file
are scheduled to be processed. Also all files which includes (by
Cpp pre-processor) those files are scheduled to be processed.
.TP
.B "\-fastupdate"
The same as -update with the difference that files which include
modified files are not scheduled to be processed. Unless you
are using also '-exactpositionresolve' option this is
enough for most references to be correctly updated.
.TP
.B "\-fullupdate"
Force update of input files. This option is like the
.I -update
option with the difference that input files entered on command
line are always reparsed (independent of their modification time).
.TP
.B "\-set <name> <value>"
The c-xref task provide a simple environment management. The -set option
associates the string <name> to the string <value>. The value can be
then accessed by enclosing the name in ${ }.

If an option contains name of previously defined variable enclosed in ${ and }, then
the name (together with encolsing ${}) is replaced by the
corresponding value. Variables can be hence used to abbreviate
options or to predefine repeated parts of options.
Following predefined variables can be used in order to introduce problematic
characters into options: 'nl' for newline; 'pc' for percent; 'dl' for dollar
and 'dq' for double-quotes. Also all environment variables taken from
operating system (like PATH, HOME, ...) are 'inherited' and can be used
when enclosed in ${ }. For example ${PATH} string will be replaced
by the value of PATH environment variable.

Another usage of -set option is to define project depending
values used by Emacs macros. Emacs can retrieve value of an
environmnet variable by sending '-get <name>' request to c-xref task.
Emacs is currently using following variables to get project depending
settings: "compilefile", "compiledir", "compileproject", "run1", "run2", ... , "run5", "runthis"
and "run". Those variables are used by 'Emacs IDE' macros to retrieve commands
for compilation and running of project program.
For example an option: -set run "echo will run now ${nl}a.out"
will define run command to print 'will run now' message and then execute
a.out command. When a command string is enclosed in quotas it
can contain newline characters to separate sequence of commands.
For more info about compile and run commands see on-line Emacs help of
the corresponding C-xrefactory macros.
.TP
.B \-encoding=<type>
This option specifies international encoding of input files. Available
values for <type>
are 'default', 'european', 'euc', 'sjis', 'utf', 'utf-8', 'utf-16', 'utf-16le'
and 'utf-16be'. The 'default' value results in standard ASCII (and 'utf-8')
characters. If your files contain, for example, 8-bit european characters, then you
should include -encoding=european into your project setting.
.TP
.B \-javadocurl=<url> \-htmljavadocpath=<url>
Specifies URL where existing non-local Javadoc documentation is stored.
Both options are equivalent, the -htmljavadocpath is obsolete.
The default
is "-javadocurl=http://java.sun.com/j2se/1.3/docs/api".
It is supposed to contain Javadoc documentation of packages
for which you do not have source code nor local Javadoc
documentation, but the documentation is available on the Internet.
See also -javadocpath, -javadocavailable and -htmlgenjavadoclink options.
.TP
.B \-javadocavailable=<packs> \-htmljavadocavailable=<packs>
Both options are equivalent, the -htmljavadocavailable is obsolete.
The option specifies packages having Javadoc documentation placed
on the URL specified by the -javadocurl option.
The <packs> string is a list of packages separated by ':' sign. For example
correct setting for standard jdk is: "-javadocavailable=java.applet:java.awt:java.beans:java.io:java.lang:java.math:java.net:java.rmi:java.security:java.sql:java.text:java.util:javax.accessibility:javax.swing:org.omg.CORBA:org.omg.CosNaming".
See also -javadocpath, -javadocurl and -htmlgenjavadoclink options.
.TP
.B \-optinclude file (or \-stdop file)
This option causes that the file `\|\c
.I file\c
\&\|' is read and scanned for further options. When used in an .c-xrefrc file
this options includes options defined in
.I file.
However, if the included file is modified while c-xref task is running
then c-xref is unable to automatically reload new options.
If you use -optinclude
(-stdop) option, and you modify included file, you will need to kill
and restart c-xref server task in order that changes take effect.
.TP
.B \-no-stdoptions
This option prevents
searching for standard option files '.c-xrefrc' and 'C-xref.opt'.
.TP
.B -mf=<n>
This option sets the memory factor for cross-references. The larger is the
memory factor, the larger is the memory reserved to store cross-references
and so c-xref does not need to swap references on disk so frequently. The default
value of
.I n
is 1. For example the '-mf=10' option causes that the memory used for
cross-references will be increased by the factor of 10. This option can be
used only as command line option. If you use it inside the ~/.c-xrefrc file
it has no effect.
.TP
.B "\-pass<n>"
Strictly speaking this is not c-xref option. It is used in the .c-xrefrc
configuration file to describe how to process source files in multiple passes.
Multiple passes are necessary if you need to process your C sources
for several initial macro settings. For more informations about this option
read the 'c-xrefrc' manual page.
.TP
.B "\-no-cppcomments"
When scanning input files, do not consider the string `\|\c
.I //\c
\&\|' as beginning of a comment ended by end of line.
.TP
.B "\-csuffixes=<suffixes>"
This option defines list of suffixes (separated by ':' character under Unix and ';' under MS-Windows)
for C source files. Files with those suffixes will be inserted
into Tag file and parsed with C-xrefactory's C parser. Suffixes should not start by the '.'
dot character which is considered as suffix separator automatically. For example
suffixes "c:tc" mean that files ending by ".c" or ".tc" strings are considered as C input
files.
.TP
.B "\-javasuffixes=<suffixes>"
This option defines list of suffixes (separated by ':' character under Unix and ';' under MS-Windows)
for Java source files. Files with those suffixes will be inserted
into Tag file and parsed with C-xrefactory's Java parser. Suffixes should not start by the '.'
dot character which is consider as suffix separator automatically.
For example, the default value under MS-Windows is -javasuffixes=java;JAV.
.TP
.B "\-filescasesensitive" "\-filescaseunsensitive"
This option controls whether c-xref is considering two file names differing only
in cases as the same file or not. By default file names are considered as case
sensitive. Setting names to be case unsensitive may avoid confusion
in C #include directives under MS-Windows system.
.TP
.B "\-errors"
Report all error messages.
.TP
.B "\-noconversion \-crconversion \-crlfconversion"
Options controling end of line character conversions. By default c-xref automatically
determines which character sequence should be considered as end-of-line. Those
options force c-xref to consider respectively linefeed (-noconversion), return (-crconversion),
or return followed by linefeed (-crlfconversion) as beginning of next line. Those
cases corresponds respectively to Unix, Mac OS and Windows systems.
.TP
.B "-debug"
Produce debugging output tracing execution and
determining possible source of errors. This option is very usefull if
some reactions of c-xref are inadequate on some input. In this case you can
run c-xref with given input file and -debug option. In the produced output
you can search for error messages and discover the origin of problems.

.SH "MORE INFO"
.RB http://github.com/thoni56/c-xrefactory
.SH "SEE ALSO"
.RB c-xrefrc(5),
